{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "author": "anhnd13",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/app/shared/components/base/button/button.component.ts",
      "content": "import { Component, HostBinding, Input, TemplateRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  ButtonSize,\r\n  ButtonShape,\r\n  ButtonColor,\r\n  ButtonAlign,\r\n} from '@enums/ui.enum';\r\nimport { SvgInlineComponent } from '@components/base/svg-inline/svg-inline.component';\r\n\r\nfunction toButtonColor(value: string): ButtonColor {\r\n  const colorKey = Object.keys(ButtonColor).find(\r\n    (key) => ButtonColor[key as keyof typeof ButtonColor] === value\r\n  );\r\n  return colorKey\r\n    ? ButtonColor[colorKey as keyof typeof ButtonColor]\r\n    : ButtonColor.Primary;\r\n}\r\n\r\nfunction toButtonSize(value: string): ButtonSize {\r\n  const sizeKey = Object.keys(ButtonSize).find(\r\n    (key) => ButtonSize[key as keyof typeof ButtonSize] === value\r\n  );\r\n  return sizeKey\r\n    ? ButtonSize[sizeKey as keyof typeof ButtonSize]\r\n    : ButtonSize.Lg;\r\n}\r\n\r\n@Component({\r\n  selector: '[app-button]',\r\n  standalone: true,\r\n  imports: [CommonModule, SvgInlineComponent],\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport class ButtonComponent {\r\n  @Input({ transform: toButtonSize }) size: ButtonSize = ButtonSize.Lg;\r\n  @Input() prefixIcon!: string | null;\r\n  @Input() suffixIcon!: string | null;\r\n  @Input() suffix!: TemplateRef<void>;\r\n  @Input() iconOnly: boolean = false;\r\n  @Input() mute!: boolean;\r\n  @Input() shape?: ButtonShape = ButtonShape.Around;\r\n  @Input({ transform: toButtonColor }) color: ButtonColor = ButtonColor.Primary;\r\n  @Input() iconColorChange: boolean = true;\r\n  @Input() iconSize?: number;\r\n  @Input() wFull: boolean = false;\r\n  @Input() isHug: boolean = true;\r\n  @Input() align: ButtonAlign = ButtonAlign.Center;\r\n\r\n  SIZE_ICON = {\r\n    xs: 4,\r\n    sm: 5,\r\n    md: 5,\r\n    lg: 6,\r\n  };\r\n\r\n  @HostBinding('class') get hostClass() {\r\n    return this.initClass();\r\n  }\r\n\r\n  initClass() {\r\n    let classs = ['btn'];\r\n    if (this.wFull) classs.push('w-full');\r\n    if (this.align != ButtonAlign.Center) classs.push('btn-' + this.align);\r\n    if (this.mute) classs.push('btn-mute');\r\n    if (this.color) classs.push('btn-' + this.color);\r\n    if (this.shape != 'none') classs.push('btn-' + this.shape);\r\n    if (this.size !== ButtonSize.Md) classs.push('btn-' + this.size);\r\n    if (this.iconOnly) classs.push('icon-only');\r\n    if (this.isHug) classs.push('btn-hug');\r\n    if (!this.mute && !this.iconOnly) {\r\n      if (this.prefixIcon && !this.suffixIcon) classs.push('no-suffix');\r\n      if (this.suffixIcon && !this.prefixIcon) classs.push('no-prefix');\r\n    }\r\n    return classs.join(' ');\r\n  }\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/button/button.component.html",
      "content": "<div *ngIf=\"prefixIcon && !(suffixIcon && iconOnly)\" class=\"prefix\">\r\n  <app-svg\r\n    [src]=\"prefixIcon\"\r\n    [colorChange]=\"iconColorChange\"\r\n    [size]=\"iconSize || SIZE_ICON[size]\"\r\n  />\r\n</div>\r\n\r\n<div class=\"btn-title\" *ngIf=\"!iconOnly\">\r\n  <ng-content />\r\n</div>\r\n\r\n<div *ngIf=\"suffixIcon || suffix\" class=\"suffix\">\r\n  <ng-container *ngIf=\"suffixIcon\">\r\n    <app-svg\r\n      [src]=\"suffixIcon\"\r\n      [colorChange]=\"iconColorChange\"\r\n      [size]=\"iconSize || SIZE_ICON[size]\"\r\n    />\r\n  </ng-container>\r\n  <ng-container *ngIf=\"suffix\">\r\n    <ng-container *ngTemplateOutlet=\"suffix\" />\r\n  </ng-container>\r\n</div>\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/button/button.component.scss",
      "content": "$sizeBtns:\r\n  (\"\", 32px, 600 #{14px}/ 20px, 5, var(--br-lg), 10px 16px, 20px),\r\n  (\"-xs\", 24px, 600 #{12px}/ 16px, 4, var(--br-xs), 4px 12px, 16px),\r\n  (\"-sm\", 32px, 600 #{14px}/ 20px, 5, var(--br-sm), 6px 12px, 16px),\r\n  (\"-lg\", 48px, 600 #{16px}/ 24px, 6, var(--br-lg), 12px 16px, 24px);\r\n\r\n// $name, $colorText, $colorTextHover,\r\n// $colorTextActive, $bg, $bgHover,\r\n// $bgActive, $border, $shadow, $disableColor, $disableText, $disableBorder\r\n$buttonConfig:\r\n  (\r\n    \"primary\",\r\n    var(--text-textoncolorprimary),\r\n    // text color\r\n    var(--text-textoncolorprimary),\r\n    // text color hover\r\n    var(--text-textoncolorprimary),\r\n    // text color active\r\n    var(--btn-primary-color),\r\n    // background\r\n    var(--btn-primary-color-hover),\r\n    // background hover\r\n    var(--btn-primary-color-pressed),\r\n    // background active\r\n    var(--transparent),\r\n    // border\r\n    var(--focus-ring-focus-ring),\r\n    // shadow (for focus state)\r\n    var(--background-backgrounddisable),\r\n    // background disable\r\n    var(--text-textdisable),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"secondary\",\r\n    var(--text-textlink),\r\n    // text color\r\n    var(--text-textlink),\r\n    // text color hover\r\n    var(--text-textlink),\r\n    // text color active\r\n    var(--background-backgroundwhite),\r\n    // background\r\n    var(--brand-brandprimary10),\r\n    // background hover (guessing based on common patterns)\r\n    var(--brand-brandprimary10),\r\n    // background active (guessing based on common patterns)\r\n    var(--border-borderbrand),\r\n    // border\r\n    var(--focus-ring-focus-ring),\r\n    // shadow (for focus state)\r\n    var(--background-backgroundsecondary),\r\n    // background disable\r\n    var(--text-textdisable),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"link-primary\",\r\n    var(--text-textlink),\r\n    // text color\r\n    var(--text-textlink),\r\n    // text color hover\r\n    var(--text-textlink),\r\n    // text color active\r\n    var(--transparent),\r\n    // background\r\n    var(--transparent),\r\n    // background hover\r\n    var(--transparent),\r\n    // background active\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--text-textdisable),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"ghost\",\r\n    var(--text-textlink),\r\n    // text color\r\n    var(--text-textlink),\r\n    // text color hover\r\n    var(--text-textlink),\r\n    // text color active\r\n    var(--background-backgroundwhite),\r\n    // background\r\n    var(--brand-brandprimary10),\r\n    // background hover (guessing based on common patterns)\r\n    var(--transparent),\r\n    // background active (guessing based on common patterns)\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--text-textdisable),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"text\",\r\n    var(--text-textlink),\r\n    // text color\r\n    var(--text-textlink),\r\n    // text color hover\r\n    var(--text-textlink),\r\n    // text color active\r\n    var(--transparent),\r\n    // background\r\n    var(--transparent),\r\n    // background hover (guessing based on common patterns)\r\n    var(--transparent),\r\n    // background active (guessing based on common patterns)\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--transparent),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"link-secondary\",\r\n    var(--text-textlink),\r\n    // text color\r\n    var(--text-textlink),\r\n    // text color hover\r\n    var(--text-textlink),\r\n    // text color active\r\n    var(--transparent),\r\n    // background\r\n    var(--transparent),\r\n    // background hover\r\n    var(--transparent),\r\n    // background active\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--text-textdisable),\r\n    // text disable\r\n    var(--transparent),\r\n    // border disable\r\n  ),\r\n  (\r\n    \"link-on-color\",\r\n    var(--text-textoncolorprimary),\r\n    // text color\r\n    var(--text-textoncolorprimary),\r\n    // text color hover\r\n    var(--text-textoncolorprimary),\r\n    // text color active\r\n    var(--transparent),\r\n    // background\r\n    var(--transparent),\r\n    // background hover\r\n    var(--transparent),\r\n    // background active\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--neutral-white50),\r\n    // text disable\r\n    var(--transparent) // border disable\r\n  ),\r\n  (\r\n    \"sub-danger \",\r\n    var(--text-texterror),\r\n    // text color\r\n    var(--text-texterror),\r\n    // text color hover\r\n    var(--text-texterror),\r\n    // text color active\r\n    var(--background-backgrounderrorsecondary),\r\n    // background\r\n    \"linear-gradient(0deg, rgba(220, 38, 38, 0.10) 0%, rgba(220, 38, 38, 0.10) 100%), var(--background-backgrounderrorsecondary, #FEF2F2)\",\r\n    // background hover\r\n    \"linear-gradient(0deg, rgba(220, 38, 38, 0.20) 0%, rgba(220, 38, 38, 0.20) 100%), var(--background-backgrounderrorsecondary, #FEF2F2)\",\r\n    // background active\r\n    var(--transparent),\r\n    // border\r\n    var(--transparent),\r\n    // shadow\r\n    var(--transparent),\r\n    // background disable\r\n    var(--neutral-white50),\r\n    // text disable\r\n    var(--transparent)\r\n    // border disable\r\n  );\r\n\r\n\r\n:host {\r\n  @each $name, $colorText, $colorTextHover, $colorTextActive, $bg, $bgHover,\r\n    $bgFocus, $border, $shadow, $disableColor, $disableText,\r\n    $disableBorder in $buttonConfig\r\n  {\r\n    &.btn-#{$name} {\r\n      --btn-color: #{$colorText};\r\n      --btn-color-hover: #{$colorTextHover};\r\n      --btn-color-active: #{$colorTextActive};\r\n      --btn-bgcolor: #{$bg};\r\n      --btn-bgcolor-hover: #{$bgHover};\r\n      --btn-bgcolor-focus: #{$bgFocus};\r\n      --btn-border-color: #{$border};\r\n      --btn-shadow: #{$shadow};\r\n      --btn-disable: #{$disableColor};\r\n      --btn-disable-text: #{$disableText};\r\n      --btn-border-disable: #{$disableBorder};\r\n    }\r\n  }\r\n\r\n  @each $name, $height, $font, $sizeIcon, $radius, $padding,\r\n    $paddingWithIcon in $sizeBtns\r\n  {\r\n    &.btn#{$name} {\r\n      --btn-rounded: #{$radius};\r\n      --btn-font: #{$font} var(--font-family);\r\n      --btn-padding: #{$padding};\r\n      --btn-padding-with-icon: #{$paddingWithIcon};\r\n      --btn-padding-icononly: calc((#{$height} - #{$sizeIcon} * 0.25rem) / 2);\r\n    }\r\n  }\r\n\r\n  &.btn {\r\n    border: none;\r\n    border-radius: var(--btn-rounded);\r\n    color: var(--btn-color);\r\n\r\n    @apply inline-flex items-center transition-all outline-none justify-center relative gap-2 cursor-pointer;\r\n\r\n    &:not(:disabled):hover {\r\n      color: var(--btn-color-hover);\r\n    }\r\n\r\n    &:not(:disabled):focus,\r\n    &.active {\r\n      color: var(--btn-color-active);\r\n    }\r\n\r\n    &:not(.btn-mute) {\r\n      background: var(--btn-bgcolor);\r\n      box-shadow: inset 0 0 0 1px var(--btn-border-color);\r\n\r\n      &:not(:disabled):hover {\r\n        background: var(--btn-bgcolor-hover);\r\n      }\r\n\r\n      &:not(:disabled):focus,\r\n      &.active {\r\n        background: var(--btn-bgcolor-focus);\r\n      }\r\n    }\r\n\r\n    &:not(.icon-only) {\r\n      font: var(--btn-font);\r\n\r\n      &:not(.btn-mute) {\r\n        padding: var(--btn-padding);\r\n      }\r\n\r\n      &.no-prefix:not(.btn-mute) {\r\n        padding-left: var(--btn-padding-with-icon);\r\n      }\r\n      &.no-suffix:not(.btn-mute) {\r\n        padding-right: var(--btn-padding-with-icon);\r\n      }\r\n    }\r\n\r\n    &.icon-only:not(.btn-mute) {\r\n      padding: var(--btn-padding-icononly);\r\n    }\r\n\r\n    &.btn-start {\r\n      @apply justify-start;\r\n    }\r\n\r\n    &.btn-end {\r\n      @apply justify-end;\r\n    }\r\n    &.btn-text {\r\n      :hover {\r\n        @apply underline;\r\n      }\r\n    }\r\n\r\n    &.btn-between {\r\n      @apply justify-between;\r\n    }\r\n    .prefix,\r\n    .suffix {\r\n      @apply flex items-center justify-center h-full;\r\n    }\r\n\r\n    .btn-title {\r\n      @apply text-ellipsis whitespace-nowrap overflow-hidden;\r\n    }\r\n\r\n    &.btn-mute {\r\n      @apply bg-transparent min-w-0;\r\n    }\r\n\r\n    // &.btn-hug:not(.btn-mute):not(.icon-only) {\r\n    //   @apply min-w-[100px];\r\n    // }\r\n\r\n    &.btn-circle {\r\n      --btn-rounded: 50%;\r\n    }\r\n\r\n    &.btn-around {\r\n      --btn-rounded: 9999px;\r\n    }\r\n    &-link-primary,\r\n    &-link-secondary,\r\n    &-link-on-color {\r\n      @apply p-0 min-w-0 gap-1 #{!important};\r\n    }\r\n    &:disabled {\r\n      @apply cursor-not-allowed;\r\n      color: var(--btn-disable-text);\r\n      background: var(--btn-disable);\r\n      border-color: var(--btn-border-disable);\r\n      box-shadow: none;\r\n    }\r\n  }\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}