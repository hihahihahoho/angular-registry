{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pageheader",
  "type": "registry:component",
  "author": "anhnd13",
  "dependencies": [
    "ng-zorro-antd"
  ],
  "registryDependencies": [
    "breadcrumb"
  ],
  "files": [
    {
      "path": "src/app/shared/components/base/pageheader/pageheader.component.ts",
      "content": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Component,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  inject,\r\n} from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BreadcrumbComponent } from '@components/base/breadcrumb/breadcrumb.component';\r\nimport { Language } from '@enums/common.enum';\r\nimport { AnySafeType } from '@enums/type.enum';\r\nimport { IBreadcrumb } from '@services/breadcrumb/breadcrumb.service';\r\nimport { CommonService } from '@services/common/common.service';\r\nimport { TranslationService } from '@services/translation/translation.service';\r\nimport { UI } from '@services/ui/ui.service';\r\nimport { Observable } from 'rxjs';\r\n@Component({\r\n  selector: 'app-pageheader',\r\n  standalone: true,\r\n  imports: [CommonModule, BreadcrumbComponent],\r\n  templateUrl: './pageheader.component.html',\r\n  styleUrls: ['./pageheader.component.scss'],\r\n})\r\nexport class PageheaderComponent implements OnInit, AfterContentInit {\r\n  @HostBinding('class.app-pageheader') page = true;\r\n  @Input() back: boolean = false;\r\n  @Input() backIcon: string = 'media/icons/outline/arrow-left.svg';\r\n  @Input() backUrl!: string;\r\n  @Input() breadcrumb: boolean = true;\r\n  @Input() customBreadcrumbLast!: IBreadcrumb;\r\n  @Input() customPageTitle!: { name: string; nameEn: string };\r\n\r\n  private activatedRoute = inject(ActivatedRoute);\r\n  private translationService = inject(TranslationService);\r\n  private commonService = inject(CommonService);\r\n  private titleService = inject(Title);\r\n  private router = inject(Router);\r\n\r\n  readonly UI = inject(UI);\r\n\r\n  LANGUAGE = Language;\r\n\r\n  pageTitle!: { name: string; nameEn: string };\r\n  lang$!: Observable<AnySafeType>;\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.data.subscribe((data) => {\r\n      this.pageTitle = data['pageTitle'];\r\n    });\r\n\r\n    this.lang$ = this.translationService.getLang();\r\n\r\n    this.lang$.subscribe((data) => {\r\n      data === Language.Vi\r\n        ? this.titleService.setTitle(this.pageTitle.name)\r\n        : this.titleService.setTitle(this.pageTitle.nameEn);\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.customPageTitle) this.pageTitle = this.customPageTitle;\r\n  }\r\n\r\n  onBack() {\r\n    if (this.backUrl) this.router.navigateByUrl(this.backUrl);\r\n    else this.commonService.historyBack();\r\n  }\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/pageheader/pageheader.component.html",
      "content": "<app-breadcrumb class=\"mt-2\" *ngIf=\"breadcrumb\" />\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/pageheader/pageheader.component.scss",
      "content": ":host {\r\n  &.app-pageheader {\r\n    @apply block pb-6;\r\n  }\r\n}\r\n\r\n.page-header-inner {\r\n  @apply flex gap-3 items-center;\r\n}\r\n\r\n.btn-back {\r\n  // @apply text-primary bg-grey-lighter #{!important};\r\n}\r\n\r\n.page-title {\r\n  @apply text-heading-small md:text-heading-medium flex-auto;\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}