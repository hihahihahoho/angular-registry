{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ui-enums",
  "type": "registry:file",
  "author": "anhnd13",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/app/shared/enums/ui.enum.ts",
      "content": "export enum AccordionType {\r\n  Box = 'box',\r\n  Arrow = 'arrow',\r\n  UnBox = 'unbox',\r\n}\r\n\r\nexport enum AccordionSize {\r\n  Sm = 'sm',\r\n  Md = 'md',\r\n  Lg = 'lg',\r\n}\r\n\r\nexport enum ItemIconCircleSize {\r\n  Md = 'md',\r\n  Lg = 'lg',\r\n}\r\n\r\nexport enum AvatarSize {\r\n  Xs = 'xs',\r\n  Sm = 'sm',\r\n  Md = 'md',\r\n  midMd = 'midMd',\r\n  Lg = 'lg',\r\n  Xxl = 'xxl',\r\n}\r\n\r\nexport enum AvatarType {\r\n  Image = 'image',\r\n  Icon = 'icon',\r\n  Text = 'text',\r\n}\r\n\r\nexport enum AvatarStyle {\r\n  Bank = 'bank',\r\n  Light = 'light',\r\n}\r\n\r\nexport enum AuthMethod {\r\n  SMS_OTP = 'sms_otp',\r\n  SMART_OTP = 'smartotp',\r\n  SOFT_OTP = 'softotp',\r\n  PASSWORD = 'password',\r\n}\r\n\r\n\r\nexport enum BadgeColor {\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Disable = 'disable',\r\n  NonSemantic = 'non-semantic',\r\n  Error = 'error',\r\n  Info = 'info',\r\n}\r\n\r\nexport enum BadgeIconTypes {\r\n  Success = 'media/icons/solid/ic_checkmark_circle_solid.svg',\r\n  Warning = 'media/icons/solid/ic_alert_solid.svg',\r\n  Disable = 'media/icons/solid/ic_alert_circle_solid.svg',\r\n  NonSemantic = 'media/icons/solid/ic_circle_dashed.svg',\r\n  Error = 'media/icons/solid/alert-circle.svg',\r\n  Info = 'media/icons/solid/ic_information_circle_solid.svg',\r\n}\r\n\r\nexport enum BadgeNumberColor {\r\n  Primary = 'primary',\r\n  Secondary = 'secondary',\r\n}\r\n\r\n\r\nexport enum BadgeSize {\r\n  Sm = 'sm',\r\n  Md = 'md',\r\n  Lg = 'lg',\r\n}\r\n\r\nexport enum ButtonShape {\r\n  Circle = 'circle',\r\n  Around = 'around',\r\n  None = 'none',\r\n}\r\n\r\nexport enum ButtonSize {\r\n  Xs = 'xs',\r\n  Sm = 'sm',\r\n  Md = 'md',\r\n  Lg = 'lg',\r\n}\r\n\r\nexport enum ButtonColor {\r\n  Primary = 'primary',\r\n  Secondary = 'secondary',\r\n  LinkPrimary = 'link-primary',\r\n  LinkSecondary = 'link-secondary',\r\n  LinkOnColor = 'link-on-color',\r\n  SubDanger = 'sub-danger',\r\n}\r\n\r\nexport enum ButtonAlign {\r\n  Start = 'start',\r\n  End = 'end',\r\n  Center = 'center',\r\n  Between = 'between',\r\n}\r\n\r\nexport enum CardEmptyType {\r\n  List = 'list',\r\n  User = 'user',\r\n}\r\n\r\nexport enum CardEmptyIconType {\r\n  List = 'media/empty-state/folder.svg',\r\n  User = 'media/empty-state/user.svg',\r\n}\r\n\r\nexport enum DateMode {\r\n  Date = 'date',\r\n  Week = 'week',\r\n  Month = 'month',\r\n  Year = 'year',\r\n  Quarter = 'quarter',\r\n}\r\n\r\nexport enum Direction {\r\n  Vertical = 'vertical',\r\n  Horizontal = 'horizontal',\r\n}\r\n\r\nexport enum IconType {\r\n  Avatar = 'avatar',\r\n  Card = 'card',\r\n  Service = 'service',\r\n}\r\n\r\nexport enum InputSize {\r\n  Small = 'small',\r\n  Medium = 'default',\r\n  Large = 'large',\r\n}\r\n\r\nexport enum InputType {\r\n  Text = 'text',\r\n  Password = 'password',\r\n}\r\n\r\nexport enum InputShape {\r\n  Around = 'around',\r\n  None = 'none',\r\n}\r\n\r\nexport type ImageFormatType = 'svg' | 'png' | 'jpg' | 'jpeg' | 'unknown';\r\n\r\nexport enum ModalActionLayout {\r\n  Fill = 'fill',\r\n  Right = 'right',\r\n  Left = 'left',\r\n  Center = 'center',\r\n}\r\n\r\nexport enum ModalSize {\r\n  XSmall = 'xs',\r\n  Small = 'sm',\r\n  XMedium = 'xmd',\r\n  Medium = 'md',\r\n  Large = 'lg',\r\n  XLarge = 'xl',\r\n}\r\n\r\nexport enum ModalTypeShow {\r\n  Popup = 'popup',\r\n  Sheet = 'sheet',\r\n}\r\n\r\nexport enum ModalTypeColor {\r\n  Process = 'process',\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Error = 'error',\r\n}\r\n\r\nexport enum ModalType {\r\n  Success = 'success',\r\n  Error = 'error',\r\n  Warning = 'warning',\r\n  Info = 'info',\r\n}\r\n\r\nexport enum ModalIconType {\r\n  Success = 'media/icons/semantic/success.svg',\r\n  Error = 'media/icons/semantic/error.svg',\r\n  Warning = 'media/icons/semantic/alert.svg',\r\n  Info = 'media/icons/semantic/info.svg',\r\n}\r\n\r\nexport enum PageWrapperSize {\r\n  XSmall = 'xsmall',\r\n  Small = 'small',\r\n  Medium = 'medium',\r\n  Large = 'large',\r\n  XLarge = 'xlarge',\r\n  Full = 'full',\r\n}\r\n\r\nexport enum PillColor {\r\n  Primary = 'primary',\r\n  SubPrimary = 'sub-primary',\r\n  Outline = 'outline',\r\n  OutlineGrey = 'outline-grey',\r\n  Secondary = 'secondary',\r\n  SubSecondary = 'sub-secondary',\r\n  Danger = 'danger',\r\n  SubDanger = 'sub-danger',\r\n  Success = 'success',\r\n  SubSuccess = 'sub-success',\r\n  Warning = 'warning',\r\n  SubWarning = 'sub-warning',\r\n  Transparent = 'transparent',\r\n  Select = 'select',\r\n}\r\n\r\nexport enum PillSize {\r\n  Sm = 'small',\r\n  Md = 'medium',\r\n  Lg = 'large',\r\n}\r\n\r\nexport enum ProcessDirection {\r\n  Rtl = 'rtl',\r\n  Ltr = 'ltr',\r\n}\r\n\r\nexport enum ProcessType {\r\n  Success = 'success',\r\n  Info = 'info',\r\n  Warning = 'warning',\r\n  Error = 'error',\r\n  Secondary = 'secondary',\r\n}\r\n\r\nexport enum RankingType {\r\n  Silver = 'silver',\r\n  Gold = 'gold',\r\n  Titanium = 'titanium',\r\n  Platinum = 'platinum',\r\n  None = 'none',\r\n}\r\n\r\nexport enum StepType {\r\n  Full = 'full',\r\n  Bar = 'bar',\r\n}\r\n\r\nexport enum TabSize {\r\n  Sm = 'sm',\r\n  Md = 'md',\r\n  Lg = 'lg',\r\n}\r\n\r\nexport enum TabType {\r\n  Pill = 'pill',\r\n  ButtonPill = 'button-pill',\r\n}\r\n\r\nexport enum TabTheme {\r\n  Default = 'default',\r\n  Brand = 'brand',\r\n}\r\n\r\nexport const TOAST_DURATION = 3000;\r\n\r\nexport enum ToastType {\r\n  Info = 'info',\r\n  Success = 'success',\r\n  Warning = 'warning',\r\n  Danger = 'danger',\r\n}\r\n\r\nexport enum ToastIconType {\r\n  Info = 'media/icons/solid/alert-info-toast.svg',\r\n  Warning = 'media/icons/solid/alert-warning-toast.svg',\r\n  Danger = 'media/icons/solid/alert-error-toast.svg',\r\n  Success = 'media/icons/solid/alert-success-toast.svg',\r\n}\r\n\r\nexport enum ValidateErrorAlign {\r\n  Left = 'left',\r\n  Center = 'center',\r\n  Right = 'right',\r\n}\r\n",
      "type": "registry:file",
      "target": "src/app/shared/enums/ui.enum.ts"
    }
  ]
}