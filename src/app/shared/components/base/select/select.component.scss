@import "mixin";

$lineHeight: 32px;
//name, wraperRadius, height
$InputSizeConfig: (
    "",
    var(--br-radius-input-md),
    var(--height-input-md),
    var(--px-input-md)
  ),
  ("-sm", var(--br-radius-input-sm), var(--height-input-sm), var(--px-input-sm)),
  ("-lg", var(--br-radius-input-lg), var(--height-input-lg), var(--px-input-lg));

@function pyInput($height, $lineHeight, $border: 1px) {
  @return calc(($height - $lineHeight - $border * 2) / 2);
}

:host {
  &.app-select {
    --wrap-radius: var(--br-radius-input-md);
    --more-pd: 8px 0;
    @apply w-full;
    &.small {
      --wrap-radius: var(--br-radius-input-sm);
      --more-pd: 4px 0;
    }

    &.large {
      --wrap-radius: var(--br-radius-input-lg);
      --more-pd: 12px 0;
    }
  }
}

.select {
  &-wrapper {
    @apply flex-auto min-w-0;

    &:not(.more-wrapper) {
      @apply flex;
    }

    &.more-wrapper {
      @apply relative py-0 px-3;

      ::ng-deep {
        .ant-select {
          width: calc(100% + 24px);
          @apply z-[1] -ml-3;

          &-selector {
            @apply border-none shadow-none py-3 #{!important};
          }

          &.ant-select-disabled {
            .ant-select-selector {
              @apply bg-transparent #{!important};
            }

            & ~ .wrapper {
              @include inputStyleDisabled;
            }
          }
        }
      }

      .wrapper {
        border-radius: var(--wrap-radius);
        @apply bg-transparent absolute w-full border h-full top-0 left-0 pointer-events-none z-0;
        @include inputStyle;
      }

      .more {
        @apply relative z-[1] p-[var(--more-pd)] border-t border-dashed;
      }
    }
  }
}

.selected {
  &-wrap {
    @apply flex gap-3 h-full truncate;
  }

  &-image {
    @apply flex justify-center items-center;
  }

  &-value {
    @apply flex-auto flex flex-col justify-center truncate;

    .title {
      @apply truncate text-body-large-semibold;
    }
    .sub {
      @apply truncate text-body-medium-regular text-text-textneutralsecondary;
    }
  }
}

.select-prefix-image {
  @apply size-5 min-w-5;
  &-wrap {
    @apply size-8 min-w-8 rounded-circle flex items-center justify-center;
  }
}

::ng-deep {
  .ant-select {
    --pr-input: 36px;
    --selector-radius: var(--br-radius-input-md);
    --py-input: 0;
    --pl-input: var(--px-input-md);

    &-selector {
      @apply bg-transparent cursor-pointer h-auto rounded-[var(--selector-radius)] py-[var(--py-input)] pr-[var(--pr-input)] pl-[var(--pl-input)] #{!important};
      min-height: unset !important;
      line-height: $lineHeight !important;

      .ant-select-selection-item,
      .ant-select-selection-placeholder,
      &::after {
        line-height: $lineHeight !important;
      }

      .ant-select-selection-placeholder {
        @apply flex items-center pr-0;
      }

      .ant-select-selection-search {
        @apply right-[var(--pr-input)] left-[var(--pl-input)] #{!important};
        &-input {
          @apply outline-none border-none shadow-none appearance-none;
          @apply h-full #{!important};
        }
      }
    }

    &-allow-clear {
      --pr-input: 72px;
    }

    &:not(&-borderless) {
      .ant-select-selector {
        @apply border;
        @include inputStyle;
      }

      &.ant-select-disabled {
        .ant-select-selector {
          @include inputStyleDisabled;
        }
      }
    }

    &.ant-select-borderless .ant-select-selector {
      border: none !important;
    }

    &-clear {
      @apply m-0 w-6 h-6 -translate-y-2/4;
    }

    &-arrow {
      color: unset;
      @apply m-0 -translate-y-2/4;

      .arrow {
        @apply w-6 h-6 flex items-center justify-center transition-all;
      }
    }

    &-clear {
      right: calc(var(--pr-input) - 24px - 8px);
      @apply flex items-center justify-center bg-transparent opacity-100;
    }

    &-selection-item {
      @apply flex items-center;
      @apply pr-0 #{!important};
    }

    &-item-option {
      @apply flex items-center gap-3;

      .custom-option-item {
        @apply flex flex-1 gap-2 h-full truncate;

        &--image {
          @apply flex justify-center items-center;
        }

        &--value {
          @apply flex-auto flex flex-col justify-center truncate;

          .option-title {
            word-break: break-word;
            @apply whitespace-normal text-body-large-semibold;
          }

          .option-sub {
            @apply whitespace-nowrap text-body-medium-regular text-text-textneutralsecondary text-ellipsis overflow-hidden;
          }
        }
      }

      &-state {
        display: none;
      }

      &-selected:not(&-disabled) {
        @apply bg-transparent;
      }

      &-selected:not(&-disabled):hover,
      &-active:not(&-disabled),
      &-active:not(&-disabled):hover {
        @apply bg-hover;
      }
    }

    &.ant-select-disabled {
      .ant-select-selector {
        color: unset !important;
        cursor: not-allowed !important;
      }
    }

    &:not(&-disabled) {
      &:not(.ant-select-borderless) {
        &:hover .ant-select-selector {
          @include inputStyleHover;
        }
        &.ant-select-focused .ant-select-selector {
          @include inputStyleFocus;
        }
        &.ng-invalid.ng-touched {
          &:not(.ant-select-focused) {
            .ant-select-selector,
            &:hover .ant-select-selector {
              @include inputStyleError;
            }
          }
          &.ant-select-focused .ant-select-selector {
            @include inputStyleErrorFocus;
          }
        }
      }

      &:hover ~ .wrapper {
        @include inputStyleHover;
      }

      &.ant-select-focused ~ .wrapper {
        @include inputStyleFocus;
      }

      &.ng-invalid.ng-touched {
        & ~ .wrapper,
        &:hover ~ .wrapper {
          @include inputStyleError;
        }

        &.ant-select-focused ~ .wrapper {
          @include inputStyleErrorFocus;
        }
      }
    }

    @each $name, $wraperRadius, $height, $px in $InputSizeConfig {
      &#{$name} {
        --pl-input: #{$px};
        --selector-radius: #{$wraperRadius};
        --py-input: #{pyInput($height, $lineHeight)};
      }
    }

    &-style-checked {
      .ant-select-item-option {
        &:after {
          content: "";
          background: var(--selected-icon);
          @apply w-6 h-6 min-w-6 opacity-0 bg-contain bg-no-repeat bg-center;
        }

        &-selected:after {
          @apply opacity-100;
        }
      }
    }

    &:not(&-width-auto, .ant-pagination-options-size-changer) {
      @apply w-full min-w-[150px];
    }

    &.ant-select-open {
      .ant-select-selection-item {
        // @apply text-text-primary;
      }

      .ant-select-clear {
        @apply opacity-0;
      }

      .ant-select-arrow .arrow {
        @apply -rotate-180;
      }

      &.ant-select-show-search {
        .ant-select-selection-item {
          @apply opacity-20;
        }
      }
    }
  }
}
::ng-deep {
  .ant-select-item-option-selected:not(.ant-select-item-option-disabled) {
    @apply bg-brand-brandprimary10 #{!important};
  }
  .ant-select-arrow {
    @apply right-4;
  }
}
