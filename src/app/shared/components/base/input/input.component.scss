@import "mixin";

$pxInput: 12px;
//name, wraperRadius, height, $pxInput, btnSize
$InputSizeConfig:
  (
    "",
    var(--br-radius-input-md),
    var(--height-input-md),
    var(--px-input-md),
    32px
  ),
  (
    "-small",
    var(--br-radius-input-sm),
    var(--height-input-sm),
    var(--px-input-sm),
    28px
  ),
  (
    "-large",
    var(--br-radius-input-lg),
    var(--height-input-lg),
    var(--px-input-lg),
    var(--height-input-md)
  );

@function pyInput($height, $lineHeight) {
  @return calc(($height - $lineHeight) / 2);
}

.input {
  @apply bg-transparent rounded-md z-[2] text-body-large-semibold;
  grid-column: 2/3;
  grid-row: 2;

  &,
  &:focus {
    border: none;
    outline: none;
    box-shadow: none;
    -webkit-appearance: none;
    appearance: none;
  }

  &:disabled {
    // @apply text-text-disable;
  }

  &-prefix,
  &-suffix {
    z-index: 2;
    grid-row: 2;
    @apply flex items-center;
    .wrapper {
      @apply flex items-center gap-2;
    }
  }

  &-prefix {
    grid-column: 1;
  }
  &-prefix ~ .input {
    padding-left: 12px !important;
  }

  &-suffix {
    grid-column: 4;
  }

  &-wrapper {
    border-radius: var(--frame-radius);
    -ms-grid-columns: auto minmax(0, 1fr) auto;
    grid-template-columns: auto minmax(0, 1fr) auto;

    @apply bg-transparent grid flex-auto min-w-0;

    &-disabled {
      @apply cursor-not-allowed;

      .input {
        @apply cursor-not-allowed;
      }

      &.input-wrapper .frame {
        @include inputStyleDisabled;
      }
    }

    .frame {
      @apply border pointer-events-none z-0 transition-all;
      border-radius: var(--frame-radius);
      grid-column: 1/5;
      grid-row: 2;
      @include inputStyle;
    }

    &:not(.input-wrapper-disabled, .input-wrapper-borderless) {
      &:hover .frame {
        @include inputStyleHover;
      }

      .input:focus ~ .frame {
        @include inputStyleFocus;
      }

      .input.ng-invalid.ng-touched {
        ~ .frame {
          @include inputStyleError;
        }

        &:focus ~ .frame {
          @include inputStyleErrorFocus;
        }
      }
    }

    @each $name, $wraperRadius, $height, $pxInput, $btnSize in $InputSizeConfig
    {
      &.input-wrapper#{$name} {
        &,
        .frame {
          --frame-radius: #{$wraperRadius};
        }

        .input-prefix {
          margin-left: $pxInput;
        }

        .input-suffix {
          margin-right: $pxInput;
        }

        .input {
          padding: pyInput($height, 24px) $pxInput;
        }
      }
    }
  }
}
::placeholder {
  // @apply text-body-large;
  opacity: 1;
}
:host {
  &.app-input {
    @apply w-full;
  }
  &.border-less .frame {
    border: none;
  }

  &.input-around .input-wrapper .frame {
    --frame-radius: 999px;
  }
}

.input-rich-placeholder {
  @apply text-body-large-semibold text-text-textneutraltertiary pl-3 flex items-center;
  grid-column: 2/3;
  grid-row: 2;
  pointer-events: none;
}

.input-wrapper {
  @apply relative;
}

.input {
  &:not(:placeholder-shown) {
    ~ .input-rich-placeholder {
      opacity: 0;
    }
  }
}

:host.has-rich-placeholder {
  ::ng-deep {
    .input {
      &::placeholder {
        opacity: 0;
      }
    }
  }
}
