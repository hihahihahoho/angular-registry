{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:component",
  "author": "anhnd13",
  "dependencies": [
    "ng-zorro-antd"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/app/shared/components/base/select/select.component.ts",
      "content": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  Component,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  TemplateRef,\r\n  forwardRef,\r\n  inject,\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { NzSelectModule } from 'ng-zorro-antd/select';\r\nimport { NzToolTipModule } from 'ng-zorro-antd/tooltip';\r\n\r\nimport { AvatarComponent } from '@components/base/avatar/avatar.component';\r\nimport { ButtonComponent } from '@components/base/button/button.component';\r\nimport { CardEmptyComponent } from '@components/base/card-empty/card-empty.component';\r\nimport { SvgInlineComponent } from '@components/base/svg-inline/svg-inline.component';\r\nimport { ValidateErrorComponent } from '@components/base/validate-error/validate-error.component';\r\nimport { BaseCVADirective } from '@directives/base-cva/base-cva.directive';\r\nimport {\r\n  AvatarSize,\r\n  AvatarType,\r\n  Direction,\r\n  IconType,\r\n  InputSize,\r\n} from '@enums/ui.enum';\r\nimport { CommonService } from '@services/common/common.service';\r\nexport interface ISelect {\r\n  label: string;\r\n  value: string | number;\r\n  code?: string | number;\r\n  image?: string;\r\n  sub?: string;\r\n  disabled?: boolean;\r\n  extend?: any;\r\n}\r\n\r\nexport type ISelectProperty = 'label' | 'value' | 'code' | 'image' | 'sub';\r\n\r\nexport const SELECT_DROPDOWN_CLASSNAME = {\r\n  sm: ['ant-select-style-checked', 'ant-select-size-sm'],\r\n  md: ['ant-select-style-checked', 'ant-select-size-md'],\r\n  lg: ['ant-select-style-checked', 'ant-select-size-lg'],\r\n};\r\n\r\nexport const SELECT_OPTION_HEIGHT = {\r\n  // sm: 44,\r\n  sm: 36,\r\n  smSub: 60,\r\n  md: 44,\r\n  mdSub: 60,\r\n  lg: 52,\r\n  lgSub: 76,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    SvgInlineComponent,\r\n    AvatarComponent,\r\n    ButtonComponent,\r\n    NzSelectModule,\r\n    CardEmptyComponent,\r\n    ValidateErrorComponent,\r\n    NzToolTipModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n  ],\r\n  templateUrl: './select.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SelectComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  styleUrls: ['./select.component.scss'],\r\n})\r\nexport class SelectComponent<T>\r\n  extends BaseCVADirective<T>\r\n  implements OnChanges\r\n{\r\n  @Input() id: string =\r\n    'select' +\r\n    Math.random().toString(22).substring(2) +\r\n    new Date().getTime().toString(22);\r\n  @Input() label?: string | TemplateRef<void>;\r\n  @Input() direction: Direction = Direction.Horizontal;\r\n  @Input() options: ISelect[] = [];\r\n  @Input() placeholder: string = 'Select';\r\n  @Input() allowSearch: boolean = true;\r\n  @Input() allowClear: boolean = false;\r\n  @Input() multiple!: boolean;\r\n  @Input() class!: string;\r\n  @Input() maxLengthSearchKeyWord!: number;\r\n  @Input() noSpecialSearchKeyWord: boolean = false;\r\n  @Input() isPagination: boolean = false;\r\n  @Input() size: InputSize = InputSize.Large;\r\n  @Input() showArrow: boolean = true;\r\n  @Input() hasSub: boolean = false;\r\n  @Input() showSub: boolean = false;\r\n  @Input() borderLess: boolean = false;\r\n  @Input() allowAll: boolean = false;\r\n  @Input() disabledAll: boolean = false;\r\n  @Input() iconType: IconType = IconType.Avatar;\r\n  @Input() avatarType: AvatarType = AvatarType.Image;\r\n  @Input() iconSize: AvatarSize = AvatarSize.Xs;\r\n  @Input() filterBy: ISelectProperty[] = ['label', 'value'];\r\n  @Input() moreBlock!: TemplateRef<void>;\r\n  @Input() errorBlock!: TemplateRef<void>;\r\n  @Input() extendRight!: TemplateRef<void> | null;\r\n  @Input() suffix!: string;\r\n  @Input() dropdownRender!: TemplateRef<void>;\r\n  @Input() dropdownClass!: string;\r\n  @Input() emptyTpl!: TemplateRef<void>;\r\n  @Input() optionTpl!: TemplateRef<any>;\r\n  @Input() resultTpl!: TemplateRef<any>;\r\n  @Input() titleTpl!: TemplateRef<any>;\r\n  @Input() subTpl!: TemplateRef<any>;\r\n  @Input() optionHeight!: number;\r\n  @Input() tooltipTpl?: TemplateRef<void> | null;\r\n  @Input() tooltipIcon: string = 'media/icons/outline/alert-information.svg';\r\n  @Input() showTooltip: boolean = false;\r\n  @Input() showRequired: boolean = false;\r\n  @Input() showInvalid: boolean = true;\r\n  @Input() hint!: string;\r\n  @Input() optionOverflowSize = 6;\r\n  @Input() errorMessages!: Record<string, string>;\r\n  @Output() eOpen = new EventEmitter<boolean>();\r\n  @Output() eBlur = new EventEmitter<void>();\r\n  @Output() scrollToBottom = new EventEmitter<any>();\r\n\r\n  @HostBinding('class') get hostClass() {\r\n    return this.initClass();\r\n  }\r\n\r\n  private commonService = inject(CommonService);\r\n  private translationService = inject(TranslateService);\r\n\r\n  initClass() {\r\n    let classs = ['app-select', this.direction.toString()];\r\n    if (this.size !== InputSize.Medium) classs.push(this.size);\r\n    return classs.join(' ');\r\n  }\r\n\r\n  dropdownClassName = SELECT_DROPDOWN_CLASSNAME.md;\r\n  itemSelected: any;\r\n\r\n  ngOnChanges() {\r\n    this.initSelect(this.size);\r\n  }\r\n\r\n  initSelect(size: InputSize) {\r\n    this.initDropdownClassName(size);\r\n    this.initOptionHeight(size);\r\n\r\n    if (this.moreBlock) {\r\n      this.borderLess = true;\r\n    }\r\n  }\r\n\r\n  initDropdownClassName(size: InputSize) {\r\n    switch (size) {\r\n      case InputSize.Large:\r\n        this.dropdownClassName = SELECT_DROPDOWN_CLASSNAME.lg;\r\n        break;\r\n      case InputSize.Small:\r\n        this.dropdownClassName = SELECT_DROPDOWN_CLASSNAME.sm;\r\n        break;\r\n      default:\r\n        this.dropdownClassName = SELECT_DROPDOWN_CLASSNAME.md;\r\n        break;\r\n    }\r\n\r\n    this.dropdownClassName = [...this.dropdownClassName, this.dropdownClass];\r\n  }\r\n\r\n  initOptionHeight(size: InputSize) {\r\n    if (!this.optionHeight) {\r\n      switch (size) {\r\n        case InputSize.Large:\r\n          this.optionHeight = this.hasSub\r\n            ? SELECT_OPTION_HEIGHT.lgSub\r\n            : SELECT_OPTION_HEIGHT.lg;\r\n          break;\r\n        case InputSize.Small:\r\n          this.optionHeight = this.hasSub\r\n            ? SELECT_OPTION_HEIGHT.smSub\r\n            : SELECT_OPTION_HEIGHT.sm;\r\n          break;\r\n        default:\r\n          this.optionHeight = this.hasSub\r\n            ? SELECT_OPTION_HEIGHT.mdSub\r\n            : SELECT_OPTION_HEIGHT.md;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFilterWhenChangeSearch(searchValue: string, option: any): boolean {\r\n    if (!searchValue) return false;\r\n\r\n    const itemMapping: any =\r\n      this.options.find((item) => item.value === option.nzValue) || null;\r\n    if (itemMapping === null || itemMapping === undefined) return false;\r\n    searchValue = this.commonService\r\n      .convertVNtoUnicode(searchValue)\r\n      .toLowerCase();\r\n\r\n    return this.filterBy.some((key) => {\r\n      return this.commonService\r\n        .convertVNtoUnicode(itemMapping[key].toString())\r\n        .toLowerCase()\r\n        .includes(searchValue);\r\n    });\r\n  }\r\n\r\n  getItem(value: any): ISelect | null {\r\n    if (value.nzValue === 'all')\r\n      return {\r\n        label: this.translationService.instant('common.tat_ca'),\r\n        value: value,\r\n      };\r\n    return this.options.find((item) => item.value == value.nzValue) || null;\r\n  }\r\n\r\n  open(e: boolean) {\r\n    this.eOpen.emit(e);\r\n  }\r\n\r\n  handleBlur(e: any) {\r\n    this.eBlur.emit(e);\r\n  }\r\n\r\n  handleScrollToBottom() {\r\n    this.scrollToBottom.emit();\r\n  }\r\n\r\n  isShowClear() {\r\n    return this.allowClear && this.control.touched && !this.control.disabled;\r\n  }\r\n\r\n  clear() {\r\n    this._onTouched();\r\n  }\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/select/select.component.html",
      "content": "<ng-template #emptyDefaultTpl>\r\n  {{ \"common.khong_tim_thay_ket_qua_phu_hop\" | translate }}\r\n</ng-template>\r\n\r\n<ng-template #notFoundContent>\r\n  <app-card-empty>\r\n    <ng-container [ngTemplateOutlet]=\"emptyTpl || emptyDefaultTpl\" />\r\n  </app-card-empty>\r\n</ng-template>\r\n\r\n<ng-template #selectSuffixIcon>\r\n  <div class=\"flex gap-x-2 items-center\">\r\n    @if (suffix) {\r\n      <div [innerHTML]=\"suffix\"></div>\r\n    }\r\n    <app-svg\r\n      [colorChange]=\"false\"\r\n      class=\"arrow\"\r\n      [src]=\"'media/icons/outline/chevron-down-2.svg'\"\r\n    />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #clearIconTpl>\r\n  <a\r\n    app-button\r\n    class=\"clear-icon\"\r\n    [mute]=\"true\"\r\n    [iconOnly]=\"true\"\r\n    [iconColorChange]=\"false\"\r\n    [size]=\"'lg'\"\r\n    [prefixIcon]=\"'media/icons/solid/cancel.svg'\"\r\n    (click)=\"clear()\"\r\n  ></a>\r\n</ng-template>\r\n\r\n<ng-template #imageTpl let-image=\"image\">\r\n  @switch (iconType) {\r\n    @case (\"avatar\") {\r\n      <app-avatar [content]=\"image\" [type]=\"avatarType\" [size]=\"iconSize\" />\r\n    }\r\n    @case (\"card\") {\r\n      <div class=\"type-card\">\r\n        <img [src]=\"image\" alt=\"\" class=\"\" />\r\n      </div>\r\n    }\r\n    @default {\r\n      <div class=\"select-prefix-image-wrap\">\r\n        <app-svg\r\n          [src]=\"image\"\r\n          [extendClass]=\"'select-prefix-image'\"\r\n          [colorChange]=\"false\"\r\n          [size]=\"5\"\r\n        />\r\n      </div>\r\n    }\r\n  }\r\n</ng-template>\r\n\r\n<ng-template #resultTplDefault let-selected>\r\n  <ng-container *ngIf=\"getItem(selected) as item\">\r\n    @if (resultTpl) {\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"resultTpl\"\r\n        [ngTemplateOutletContext]=\"{ item: item }\"\r\n      />\r\n    } @else {\r\n      <div class=\"selected-wrap\">\r\n        @if (item?.image) {\r\n          <div class=\"selected-image\">\r\n            <div class=\"size-9 logo-bg\">\r\n              <img [src]=\"item?.image\" alt=\"\" class=\"size-[80%]\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        <div class=\"selected-value\">\r\n          <div class=\"title\">{{ item?.label }}</div>\r\n          @if (showSub && item?.sub) {\r\n            <div class=\"sub\">\r\n              {{ item?.sub }}\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    }\r\n  </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #optionDefaultTpl let-item=\"item\">\r\n  <div\r\n    [ngClass]=\"{\r\n      'custom-option-item': true,\r\n      isPagination: isPagination,\r\n      'has-sub': hasSub,\r\n    }\"\r\n  >\r\n    @if (item?.image) {\r\n      <div class=\"custom-option-item--image\">\r\n        <div class=\"size-10 logo-bg\">\r\n          <img [src]=\"item?.image\" alt=\"\" class=\"size-[80%]\" />\r\n        </div>\r\n      </div>\r\n    }\r\n    <div class=\"custom-option-item--value\">\r\n      <div class=\"option-title\">\r\n        @if (titleTpl) {\r\n          <ng-container\r\n            [ngTemplateOutlet]=\"titleTpl\"\r\n            [ngTemplateOutletContext]=\"{ item: item }\"\r\n          />\r\n        } @else {\r\n          {{ item?.label | translate }}\r\n        }\r\n      </div>\r\n      @if (item?.sub) {\r\n        <div class=\"option-sub\">\r\n          @if (subTpl) {\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"subTpl\"\r\n              [ngTemplateOutletContext]=\"{ item: item }\"\r\n            />\r\n          } @else {\r\n            {{ item?.sub | translate }}\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #optionItemTpl let-item=\"item\">\r\n  <ng-container\r\n    [ngTemplateOutlet]=\"optionTpl || optionDefaultTpl\"\r\n    [ngTemplateOutletContext]=\"{ item: item }\"\r\n  />\r\n</ng-template>\r\n\r\n@if (label) {\r\n  <div\r\n    [ngClass]=\"{\r\n      label: true,\r\n      required: required && showRequired,\r\n    }\"\r\n  >\r\n    <ng-template #tooltipDefaultTpl>\r\n      <div class=\"body-medium-thick mb-1\">This is a tooltip</div>\r\n      <div class=\"body-medium-thin\">\r\n        Tooltips are used to describe or identify an element. In most scenarios,\r\n        tooltips help the user understand the meaning, function or alt-text of\r\n        an element.\r\n      </div>\r\n    </ng-template>\r\n    <label class=\"label-inner\" [for]=\"id\">\r\n      {{ label }}\r\n      @if (showTooltip) {\r\n        <app-svg\r\n          class=\"icon-tooltip\"\r\n          [extendClass]=\"'md:size-6'\"\r\n          [size]=\"5\"\r\n          [colorChange]=\"false\"\r\n          nz-tooltip\r\n          [nzTooltipTitle]=\"tooltipTpl || tooltipDefaultTpl\"\r\n          [src]=\"tooltipIcon\"\r\n        />\r\n      }\r\n    </label>\r\n  </div>\r\n}\r\n\r\n<div class=\"app-root\">\r\n  <div class=\"app-root-main\">\r\n    <div class=\"select-wrapper\" [class.more-wrapper]=\"moreBlock\">\r\n      <nz-select\r\n        [nzId]=\"id\"\r\n        [nzPlaceHolder]=\"placeholder\"\r\n        [nzShowSearch]=\"allowSearch\"\r\n        [nzFilterOption]=\"handleFilterWhenChangeSearch.bind(this)\"\r\n        [nzMode]=\"multiple ? 'multiple' : 'default'\"\r\n        [nzOptionHeightPx]=\"optionHeight\"\r\n        [nzShowArrow]=\"showArrow\"\r\n        [nzBorderless]=\"borderLess\"\r\n        [nzAllowClear]=\"isShowClear()\"\r\n        [nzSuffixIcon]=\"selectSuffixIcon\"\r\n        [nzClearIcon]=\"clearIconTpl\"\r\n        [nzDropdownClassName]=\"dropdownClassName\"\r\n        [nzSize]=\"size\"\r\n        [class.show-sub]=\"showSub\"\r\n        [class]=\"class\"\r\n        [nzCustomTemplate]=\"resultTplDefault\"\r\n        [nzNotFoundContent]=\"notFoundContent\"\r\n        [nzDropdownRender]=\"dropdownRender\"\r\n        [formControl]=\"control\"\r\n        (nzOpenChange)=\"open($event)\"\r\n        (nzBlur)=\"handleBlur($event)\"\r\n        (nzScrollToBottom)=\"handleScrollToBottom()\"\r\n        [nzOptionOverflowSize]=\"optionOverflowSize\"\r\n        [nzLoading]=\"false\"\r\n      >\r\n        @if (allowAll) {\r\n          <nz-option\r\n            [nzValue]=\"'all'\"\r\n            [nzCustomContent]=\"true\"\r\n            [nzDisabled]=\"disabledAll\"\r\n          >\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"optionItemTpl\"\r\n              [ngTemplateOutletContext]=\"{\r\n                item: {\r\n                  label: 'common.tat_ca',\r\n                  value: 'all',\r\n                },\r\n              }\"\r\n            />\r\n          </nz-option>\r\n        }\r\n        @for (item of options; track item.value) {\r\n          <nz-option\r\n            [nzValue]=\"item.value\"\r\n            [nzCustomContent]=\"true\"\r\n            [nzDisabled]=\"item?.disabled\"\r\n          >\r\n            <ng-container\r\n              [ngTemplateOutlet]=\"optionItemTpl\"\r\n              [ngTemplateOutletContext]=\"{ item: item }\"\r\n            />\r\n          </nz-option>\r\n        }\r\n      </nz-select>\r\n\r\n      @if (moreBlock) {\r\n        <div class=\"more\">\r\n          <ng-container [ngTemplateOutlet]=\"moreBlock\" />\r\n        </div>\r\n        <div class=\"wrapper\"></div>\r\n      }\r\n    </div>\r\n\r\n    @if (extendRight) {\r\n      <div class=\"extend-right\">\r\n        <ng-container [ngTemplateOutlet]=\"extendRight\" />\r\n      </div>\r\n    }\r\n  </div>\r\n\r\n  @if ((control.invalid && control.touched && showInvalid) || hint) {\r\n    <div class=\"explain\">\r\n      @if (hint && !(control.invalid && control.touched)) {\r\n        <div class=\"hint\">\r\n          {{ hint }}\r\n        </div>\r\n      }\r\n      @if (control.invalid && control.touched && showInvalid) {\r\n        <app-validate-error\r\n          [errors]=\"control.errors\"\r\n          [errorMessages]=\"errorMessages\"\r\n        />\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/select/select.component.scss",
      "content": "@import \"mixin\";\r\n\r\n$lineHeight: 32px;\r\n//name, wraperRadius, height\r\n$InputSizeConfig: (\r\n    \"\",\r\n    var(--br-radius-input-md),\r\n    var(--height-input-md),\r\n    var(--px-input-md)\r\n  ),\r\n  (\"-sm\", var(--br-radius-input-sm), var(--height-input-sm), var(--px-input-sm)),\r\n  (\"-lg\", var(--br-radius-input-lg), var(--height-input-lg), var(--px-input-lg));\r\n\r\n@function pyInput($height, $lineHeight, $border: 1px) {\r\n  @return calc(($height - $lineHeight - $border * 2) / 2);\r\n}\r\n\r\n:host {\r\n  &.app-select {\r\n    --wrap-radius: var(--br-radius-input-md);\r\n    --more-pd: 8px 0;\r\n    @apply w-full;\r\n    &.small {\r\n      --wrap-radius: var(--br-radius-input-sm);\r\n      --more-pd: 4px 0;\r\n    }\r\n\r\n    &.large {\r\n      --wrap-radius: var(--br-radius-input-lg);\r\n      --more-pd: 12px 0;\r\n    }\r\n  }\r\n}\r\n\r\n.select {\r\n  &-wrapper {\r\n    @apply flex-auto min-w-0;\r\n\r\n    &:not(.more-wrapper) {\r\n      @apply flex;\r\n    }\r\n\r\n    &.more-wrapper {\r\n      @apply relative py-0 px-3;\r\n\r\n      ::ng-deep {\r\n        .ant-select {\r\n          width: calc(100% + 24px);\r\n          @apply z-[1] -ml-3;\r\n\r\n          &-selector {\r\n            @apply border-none shadow-none py-3 #{!important};\r\n          }\r\n\r\n          &.ant-select-disabled {\r\n            .ant-select-selector {\r\n              @apply bg-transparent #{!important};\r\n            }\r\n\r\n            & ~ .wrapper {\r\n              @include inputStyleDisabled;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .wrapper {\r\n        border-radius: var(--wrap-radius);\r\n        @apply bg-transparent absolute w-full border h-full top-0 left-0 pointer-events-none z-0;\r\n        @include inputStyle;\r\n      }\r\n\r\n      .more {\r\n        @apply relative z-[1] p-[var(--more-pd)] border-t border-dashed;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.selected {\r\n  &-wrap {\r\n    @apply flex gap-3 h-full truncate;\r\n  }\r\n\r\n  &-image {\r\n    @apply flex justify-center items-center;\r\n  }\r\n\r\n  &-value {\r\n    @apply flex-auto flex flex-col justify-center truncate;\r\n\r\n    .title {\r\n      @apply truncate text-body-large-semibold;\r\n    }\r\n    .sub {\r\n      @apply truncate text-body-medium-regular text-text-textneutralsecondary;\r\n    }\r\n  }\r\n}\r\n\r\n.select-prefix-image {\r\n  @apply size-5 min-w-5;\r\n  &-wrap {\r\n    @apply size-8 min-w-8 rounded-circle flex items-center justify-center;\r\n  }\r\n}\r\n\r\n::ng-deep {\r\n  .ant-select {\r\n    --pr-input: 36px;\r\n    --selector-radius: var(--br-radius-input-md);\r\n    --py-input: 0;\r\n    --pl-input: var(--px-input-md);\r\n\r\n    &-selector {\r\n      @apply bg-transparent cursor-pointer h-auto rounded-[var(--selector-radius)] py-[var(--py-input)] pr-[var(--pr-input)] pl-[var(--pl-input)] #{!important};\r\n      min-height: unset !important;\r\n      line-height: $lineHeight !important;\r\n\r\n      .ant-select-selection-item,\r\n      .ant-select-selection-placeholder,\r\n      &::after {\r\n        line-height: $lineHeight !important;\r\n      }\r\n\r\n      .ant-select-selection-placeholder {\r\n        @apply flex items-center pr-0;\r\n      }\r\n\r\n      .ant-select-selection-search {\r\n        @apply right-[var(--pr-input)] left-[var(--pl-input)] #{!important};\r\n        &-input {\r\n          @apply outline-none border-none shadow-none appearance-none;\r\n          @apply h-full #{!important};\r\n        }\r\n      }\r\n    }\r\n\r\n    &-allow-clear {\r\n      --pr-input: 72px;\r\n    }\r\n\r\n    &:not(&-borderless) {\r\n      .ant-select-selector {\r\n        @apply border;\r\n        @include inputStyle;\r\n      }\r\n\r\n      &.ant-select-disabled {\r\n        .ant-select-selector {\r\n          @include inputStyleDisabled;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.ant-select-borderless .ant-select-selector {\r\n      border: none !important;\r\n    }\r\n\r\n    &-clear {\r\n      @apply m-0 w-6 h-6 -translate-y-2/4;\r\n    }\r\n\r\n    &-arrow {\r\n      color: unset;\r\n      @apply m-0 -translate-y-2/4;\r\n\r\n      .arrow {\r\n        @apply w-6 h-6 flex items-center justify-center transition-all;\r\n      }\r\n    }\r\n\r\n    &-clear {\r\n      right: calc(var(--pr-input) - 24px - 8px);\r\n      @apply flex items-center justify-center bg-transparent opacity-100;\r\n    }\r\n\r\n    &-selection-item {\r\n      @apply flex items-center;\r\n      @apply pr-0 #{!important};\r\n    }\r\n\r\n    &-item-option {\r\n      @apply flex items-center gap-3;\r\n\r\n      .custom-option-item {\r\n        @apply flex flex-1 gap-2 h-full truncate;\r\n\r\n        &--image {\r\n          @apply flex justify-center items-center;\r\n        }\r\n\r\n        &--value {\r\n          @apply flex-auto flex flex-col justify-center truncate;\r\n\r\n          .option-title {\r\n            word-break: break-word;\r\n            @apply whitespace-normal text-body-large-semibold;\r\n          }\r\n\r\n          .option-sub {\r\n            @apply whitespace-nowrap text-body-medium-regular text-text-textneutralsecondary text-ellipsis overflow-hidden;\r\n          }\r\n        }\r\n      }\r\n\r\n      &-state {\r\n        display: none;\r\n      }\r\n\r\n      &-selected:not(&-disabled) {\r\n        @apply bg-transparent;\r\n      }\r\n\r\n      &-selected:not(&-disabled):hover,\r\n      &-active:not(&-disabled),\r\n      &-active:not(&-disabled):hover {\r\n        @apply bg-hover;\r\n      }\r\n    }\r\n\r\n    &.ant-select-disabled {\r\n      .ant-select-selector {\r\n        color: unset !important;\r\n        cursor: not-allowed !important;\r\n      }\r\n    }\r\n\r\n    &:not(&-disabled) {\r\n      &:not(.ant-select-borderless) {\r\n        &:hover .ant-select-selector {\r\n          @include inputStyleHover;\r\n        }\r\n        &.ant-select-focused .ant-select-selector {\r\n          @include inputStyleFocus;\r\n        }\r\n        &.ng-invalid.ng-touched {\r\n          &:not(.ant-select-focused) {\r\n            .ant-select-selector,\r\n            &:hover .ant-select-selector {\r\n              @include inputStyleError;\r\n            }\r\n          }\r\n          &.ant-select-focused .ant-select-selector {\r\n            @include inputStyleErrorFocus;\r\n          }\r\n        }\r\n      }\r\n\r\n      &:hover ~ .wrapper {\r\n        @include inputStyleHover;\r\n      }\r\n\r\n      &.ant-select-focused ~ .wrapper {\r\n        @include inputStyleFocus;\r\n      }\r\n\r\n      &.ng-invalid.ng-touched {\r\n        & ~ .wrapper,\r\n        &:hover ~ .wrapper {\r\n          @include inputStyleError;\r\n        }\r\n\r\n        &.ant-select-focused ~ .wrapper {\r\n          @include inputStyleErrorFocus;\r\n        }\r\n      }\r\n    }\r\n\r\n    @each $name, $wraperRadius, $height, $px in $InputSizeConfig {\r\n      &#{$name} {\r\n        --pl-input: #{$px};\r\n        --selector-radius: #{$wraperRadius};\r\n        --py-input: #{pyInput($height, $lineHeight)};\r\n      }\r\n    }\r\n\r\n    &-style-checked {\r\n      .ant-select-item-option {\r\n        &:after {\r\n          content: \"\";\r\n          background: var(--selected-icon);\r\n          @apply w-6 h-6 min-w-6 opacity-0 bg-contain bg-no-repeat bg-center;\r\n        }\r\n\r\n        &-selected:after {\r\n          @apply opacity-100;\r\n        }\r\n      }\r\n    }\r\n\r\n    &:not(&-width-auto, .ant-pagination-options-size-changer) {\r\n      @apply w-full min-w-[150px];\r\n    }\r\n\r\n    &.ant-select-open {\r\n      .ant-select-selection-item {\r\n        // @apply text-text-primary;\r\n      }\r\n\r\n      .ant-select-clear {\r\n        @apply opacity-0;\r\n      }\r\n\r\n      .ant-select-arrow .arrow {\r\n        @apply -rotate-180;\r\n      }\r\n\r\n      &.ant-select-show-search {\r\n        .ant-select-selection-item {\r\n          @apply opacity-20;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n::ng-deep {\r\n  .ant-select-item-option-selected:not(.ant-select-item-option-disabled) {\r\n    @apply bg-brand-brandprimary10 #{!important};\r\n  }\r\n  .ant-select-arrow {\r\n    @apply right-4;\r\n  }\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}