{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "swiper",
  "type": "registry:component",
  "author": "anhnd13",
  "dependencies": [
    "swiper"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/app/shared/components/base/swiper/swiper.component.ts",
      "content": "import { CommonModule } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport Swiper from 'swiper';\r\nimport { register } from 'swiper/element/bundle';\r\nimport { SwiperOptions } from 'swiper/types';\r\n\r\nregister();\r\n\r\nexport type TypeSwiper = HTMLElement & { swiper: Swiper } & {\r\n  initialize: () => void;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-swiper',\r\n  standalone: true,\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './swiper.component.html',\r\n  styleUrls: ['./swiper.component.scss'],\r\n})\r\nexport class SwiperComponent implements AfterViewInit, OnDestroy {\r\n  @Input() slides!: any;\r\n  @Input() config!: SwiperOptions;\r\n  @Input() swiperTpl!: TemplateRef<any>;\r\n  @Input() slidesTpl!: TemplateRef<any>;\r\n\r\n  @HostBinding('class.app-swiper') swipers = true;\r\n\r\n  @ViewChild('swiper') swiper!: ElementRef<TypeSwiper>;\r\n\r\n  ngAfterViewInit(): void {\r\n    Object.assign(this.swiper.nativeElement, this.config);\r\n    this.swiper.nativeElement.initialize();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.swiper.nativeElement.swiper.destroy();\r\n  }\r\n\r\n  goToLastSlide() {\r\n    const swiperInstance = this.swiper.nativeElement.swiper;\r\n    if (swiperInstance) {\r\n      swiperInstance.slideTo(swiperInstance.slides.length - 1);\r\n    }\r\n  }\r\n\r\n  goToFirstSlide() {\r\n    const swiperInstance = this.swiper.nativeElement.swiper;\r\n    if (swiperInstance) {\r\n      swiperInstance.slideTo(0);\r\n    }\r\n  }\r\n\r\n  handleItem(item: any) {\r\n    console.log('hahaL:', item);\r\n  }\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/swiper/swiper.component.html",
      "content": "<swiper-container #swiper init=\"false\" class=\"swiper-container\">\r\n  <ng-container *ngIf=\"!slidesTpl; else slidesFreeTpl\">\r\n    <swiper-slide class=\"swiper-slide\" *ngFor=\"let item of slides\">\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"swiperTpl || swiperDefaultTpl\"\r\n        [ngTemplateOutletContext]=\"{ item: item }\"\r\n      />\r\n    </swiper-slide>\r\n  </ng-container>\r\n  <ng-template #slidesFreeTpl>\r\n    <ng-container [ngTemplateOutlet]=\"slidesTpl\" />\r\n  </ng-template>\r\n</swiper-container>\r\n\r\n<ng-template #swiperDefaultTpl let-item=\"item\">\r\n  <a [routerLink]=\"[item?.route]\" class=\"slide-content\">\r\n    <div class=\"img-wrap\">\r\n      <img [src]=\"item.image\" alt=\"\" class=\"img\" />\r\n    </div>\r\n  </a>\r\n</ng-template>\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/swiper/swiper.component.scss",
      "content": "",
      "type": "registry:component"
    }
  ]
}