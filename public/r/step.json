{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "step",
  "type": "registry:component",
  "author": "anhnd13",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/app/shared/components/base/step/step.component.ts",
      "content": "import { Component, HostBinding, inject, Input, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { StepsService } from '@services/steps/steps.service';\r\nimport { StepType } from '@enums/ui.enum';\r\n\r\n@Component({\r\n  selector: 'app-step',\r\n  standalone: true,\r\n  imports: [CommonModule, TranslateModule],\r\n  templateUrl: './step.component.html',\r\n  styleUrls: ['./step.component.scss'],\r\n})\r\nexport class StepComponent implements OnInit {\r\n  @Input() currentStep: number = 1;\r\n  @Input() type: StepType = StepType.Full;\r\n  @Input() count!: number;\r\n\r\n  @Input() steps: any = [\r\n    { name: 'step.khoi_tao' },\r\n    { name: 'step.xac_nhan' },\r\n    { name: 'step.xac_thuc' },\r\n    { name: 'step.ket_qua' },\r\n  ];\r\n\r\n  STEP_TYPE = StepType;\r\n\r\n  @HostBinding('class') get hostClass() {\r\n    return this.initClass();\r\n  }\r\n\r\n  initClass() {\r\n    let classs = [`app-steps-wrap app-steps-${this.type}`];\r\n    if (this.steps.length > 3) classs.push('steps-more-3-wrap');\r\n    return classs.join(' ');\r\n  }\r\n\r\n  private stepService = inject(StepsService);\r\n\r\n  ngOnInit() {\r\n    this.stepService.initCount(this.count || this.steps.length);\r\n  }\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/step/step.component.html",
      "content": "@for (step of steps; track $index) {\r\n  <div\r\n    class=\"step\"\r\n    [ngClass]=\"{\r\n      done: $index < currentStep - 1,\r\n      active: $index === currentStep - 1,\r\n      'step-hide': $index !== currentStep - 1,\r\n    }\"\r\n  >\r\n    <ng-container *ngIf=\"type === STEP_TYPE.Full; else stepBarTpl\">\r\n      <div class=\"step-container\">\r\n        <div class=\"step-header\">\r\n          <div class=\"step-number\">\r\n            {{ ($index + 1).toString().padStart(2, \"0\") }}\r\n          </div>\r\n          <div class=\"step-title\">\r\n            {{ step.name | translate }}\r\n          </div>\r\n        </div>\r\n        <div class=\"step-divider\">\r\n          <div\r\n            class=\"step-arrow\"\r\n            *ngIf=\"$index === currentStep - 1 && $index < steps.length - 1\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n\r\n    <ng-template #stepBarTpl>\r\n      <div class=\"step-bar\"></div>\r\n    </ng-template>\r\n  </div>\r\n}\r\n",
      "type": "registry:component"
    },
    {
      "path": "src/app/shared/components/base/step/step.component.scss",
      "content": ":host {\r\n  &.app-steps-wrap {\r\n    @apply flex items-center mb-6;\r\n    gap: 12px;\r\n    padding: 12px 0px;\r\n\r\n    .step {\r\n      @apply relative;\r\n\r\n      // Inactive steps have fixed width\r\n      &:not(.active) {\r\n        @apply sm:w-[90px] w-[30px]\r\n      }\r\n\r\n      // Active step takes remaining space\r\n      &.active {\r\n        flex: 1;\r\n      }\r\n      &-hide {\r\n        .step-title {\r\n          @apply hidden;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.app-steps-full {\r\n      .step-container {\r\n        @apply flex flex-col;\r\n        gap: 4px;\r\n\r\n        .step-header {\r\n          @apply flex items-baseline ;\r\n          gap: 4px;\r\n\r\n          .step-number {\r\n            @apply text-title-xs text-text-primary leading-5;\r\n            width: 20px;\r\n            text-align: left;\r\n          }\r\n\r\n          .step-title {\r\n            @apply text-title-small text-text-textneutralprimary;\r\n            flex: 1;\r\n          }\r\n        }\r\n\r\n        .step-divider {\r\n          height: 2px;\r\n          width: 100%;\r\n          @apply relative;\r\n        }\r\n\r\n        .step-arrow {\r\n          position: absolute;\r\n          right: 0;\r\n          top: 0;\r\n          width: 24px;\r\n          height: 2px;\r\n          @apply bg-icon-iconbrandsecondary blur-[4px];\r\n        }\r\n      }\r\n\r\n      // Styling for different step states\r\n      .step {\r\n        &.done,\r\n        &.active {\r\n          .step-number {\r\n            color: #1f1d83;\r\n          }\r\n\r\n          .step-title {\r\n            color: #18181b;\r\n          }\r\n\r\n          .step-divider {\r\n            background: var(--step-divider-bg);\r\n          }\r\n        }\r\n        &.done {\r\n          .step-divider {\r\n            background: var(--brand-brandprimary100);\r\n          }\r\n        }\r\n        &:not(.done):not(.active) {\r\n          .step-number {\r\n            @apply text-text-textneutraltertiary;\r\n          }\r\n\r\n          .step-title {\r\n            @apply text-text-textneutraltertiary;\r\n          }\r\n\r\n          .step-divider {\r\n            @apply bg-border-borderdefault;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    &.app-steps-bar {\r\n      @apply gap-2;\r\n      --height-bar: 4px;\r\n      --bg-bar: var(--primary-light);\r\n      --bg-bar-active: var(--primary);\r\n\r\n      .step {\r\n        .step-bar {\r\n          @apply bg-[var(--bg-bar)] h-[var(--height-bar)] rounded-full relative;\r\n          &:before {\r\n            content: \"\";\r\n            @apply w-0 absolute h-full rounded-full bg-[var(--bg-bar-active)];\r\n            transition: 0.1s linear;\r\n            transition-delay: 0.1s;\r\n          }\r\n        }\r\n        &.active,\r\n        &.done {\r\n          .step-bar::before {\r\n            @apply w-full;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}